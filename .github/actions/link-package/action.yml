# Note: this is not meant to be used as a standalone action, as this only links a package
# to an existing JupyterLab build.
# You must install JupyterLab and its dependencies separately for example with the
# .github/actions/build-lab/action.yml

name: Build an external package from source and link to JupyterLab
description: |
  Build external package from source then link to JupyterLab.
  Useful to test changes in external packages against a given build of JupyterLab.

inputs:
  external_pkg_repo:
    description: |
      External package repository to link, for example jupyterlab/lumino
      only to be used if you want to link and test a package against JupyterLab.
      Otherwise leave blank.
    required: false
    default: ""
  external_pkg_ref:
    description: |
      External package repository's ref (branch, tag or SHA) to checkout,
      only to be used if you want to link and test a package against JupyterLab.
      Otherwise leave blank.
    required: false
    default: ""

runs:
  using: composite
  steps:
    - name: Checkout external package repo 🛎
      uses: actions/checkout@v3
      with:
        repository: ${{ inputs.external_pkg_repo }}
        ref: ${{ inputs.external_pkg_ref }}
        path: external-pkg

    # https://jupyterlab.readthedocs.io/en/latest/developer/contributing.html#id18
    - name: Build external package from source 🏗
      id: build-pkg
      run: |
        echo "::group::Build package from source 🛠"
        conda run --prefix $CONDA_PREFIX yarn
        conda run --prefix $CONDA_PREFIX yarn build:src
        echo "::endgroup::"
        echo $(pwd)
        sudo apt install -y jq
        echo "pkg-name=$(jq '.name' package.json)" >> $GITHUB_OUTPUT
      shell: bash -l {0}
      working-directory: external-pkg

    - name: Link JupyterLab and external package 🔗
      run: |
        conda run --prefix $CONDA_PREFIX yarn link "${{ github.workspace }}/external-pkg" -p
        conda run --prefix $CONDA_PREFIX jlpm run build
      shell: bash -l {0}
      working-directory: jupyterlab

    - name: Add details to action summary 📝
      run: |
        step_summary=$(cat <<EOF
        ## Linked external package 🔗
        - Package repository: [${{ inputs.external_pkg_repo }}](https://github.com/${{ github.event.inputs.external_pkg_repo }})
        - Package \`ref\`: \`${{ inputs.external_pkg_ref }}\`
        - Linked package name: \`${{ steps.build-pkg.outputs.pkg-name }}\`

        EOF
        )
        echo "${step_summary}">>  $GITHUB_STEP_SUMMARY

      shell: bash -l {0}
