name: Build Gitpod Docker image

on:
  push:
    branches:
      - main
    paths:
      - "testing/jupyterlab/environment.yml"
      - "testing/jupyterlab/package-lock.json"
      - "tools/Dockerfile"
      - ".github/gitpod-docker.yml"
  workflow_dispatch:

jobs:
  build:
    name: Build Gitpod Docker image
    runs-on: ubuntu-latest
    environment: a11y-dev
    if: "github.repository_owner == 'Quansight-Labs' && !contains(github.event.head_commit.message, '[ci skip]') && !contains(github.event.head_commit.message, '[skip ci]') && !contains(github.event.head_commit.message, '[skip github]')"
    steps:
      - name: Checkout repository 🛎
        uses: actions/checkout@v3

      - name: Lint Docker 🔍
        uses: hadolint/hadolint-action@v3.1.0
        with:
          dockerfile: ./tools/Dockerfile
          config: .hadolint.yaml

      - name: Get refs - will be used as tags 🏷
        shell: bash
        run: |
          export raw_branch=${GITHUB_REF#refs/heads/}
          echo "branch=${raw_branch//\//-}" >> "$GITHUB_OUTPUT"
          echo "date=$(date +'%Y%m%d')" >> "$GITHUB_OUTPUT"
          echo "sha8=$(echo ${GITHUB_SHA} | cut -c1-8)" >> "$GITHUB_OUTPUT"
        id: getrefs

      - name: Set up Docker Buildx 🐳
        uses: docker/setup-buildx-action@v2

      - name: Login to Docker Hub 🔑
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push Docker images 🛠️
        id: docker_build
        uses: docker/build-push-action@v4
        with:
          context: "."
          file: "tools/Dockerfile"
          push: ${{ github.event_name != 'pull_request' }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          tags: |
            quansight/jupyter-a11y:${{ steps.getrefs.outputs.date }}-${{ steps.getrefs.outputs.branch}}-${{ steps.getrefs.outputs.sha8 }}
            quansight/jupyter-a11y:latest

      - name: Print image digest 📖
        # Return details of the image build: sha and shell
        run: echo ${{ steps.docker_build.outputs.digest }}
